{"version":3,"sources":["Movie.tsx","Filter.tsx","MoviesList.tsx","MovieDetails.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Movie","movie","config","to","id","images","base_url","src","poster_path","alt","title","Filter","props","value","filter","onChange","e","setFilter","target","MoviesList","useState","movies","setMovies","setConfig","getMovie","a","fetch","res","json","results","console","error","getConfig","useEffect","className","toLowerCase","includes","map","MovieDetails","IMAGE_URL","setMovie","useParams","newMovie","backdrop_path","overview","genres","genre","name","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.785bc04e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\n\r\n// @ts-ignore\r\nexport const Movie = ({movie, config}) => {\r\n    return (<li>\r\n        <Link to={`/movie/${movie.id}`}>\r\n            {config.images?.base_url &&\r\n            <img src={` ${config.images.base_url}w342${movie.poster_path} `} alt={`${movie.title}Poster`}/>}\r\n\r\n\r\n        </Link>\r\n\r\n\r\n    </li>)\r\n}","import React, {ChangeEvent} from \"react\";\r\n\r\ntype FilterType = {\r\n    filter: string\r\n    setFilter: (value: string) => void\r\n}\r\n\r\nexport const Filter = (props: FilterType) => {\r\n\r\n    const movieFilter = (e: ChangeEvent<HTMLInputElement>) => props.setFilter(e.target.value)\r\n\r\n    return <label>\r\n        Search film:<input value={props.filter} onChange={movieFilter}/>\r\n    </label>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {Movie} from \"./Movie\";\r\nimport {Filter} from \"./Filter\";\r\n\r\nexport const MoviesList = () => {\r\n\r\n    const [filter, setFilter] = useState('')\r\n    const [movies, setMovies] = useState([])\r\n    const [config, setConfig] = useState({})\r\n\r\n    const API = 'https://api.themoviedb.org/3/discover/movie?api_key=88d152960bc5347471fe0bb0965e6bf9&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_watch_monetization_types=flatrate'\r\n\r\n    const CONFIG_URL = 'https://api.themoviedb.org/3/configuration?api_key=88d152960bc5347471fe0bb0965e6bf9'\r\n\r\n    const getMovie = async () => {\r\n        try {\r\n            const res = await fetch(API)\r\n            const movies = await res.json()\r\n            setMovies(movies.results)\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n\r\n    }\r\n\r\n    const getConfig = async () => {\r\n        try {\r\n            const res = await fetch(CONFIG_URL)\r\n            const config = await res.json()\r\n            setConfig(config)\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMovie()\r\n        getConfig()\r\n    }, [])\r\n\r\n    return (<div>\r\n        <Filter filter={filter} setFilter={setFilter}/>\r\n        <ul className={'movies-list'}>\r\n            {movies.filter((movie: {title: string}) =>\r\n                movie.title.toLowerCase().includes(filter.toLowerCase())\r\n            ).map((movie: {poster_path: string, id: number}) =>\r\n                <Movie key={movie.id} movie={movie} config={config}/>\r\n            )}\r\n        </ul>\r\n    </div>)\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom'\r\n\r\ninterface ParamsType {\r\n    id: string\r\n}\r\n\r\nconst MovieDetails = () => {\r\n    const BASE_URL = 'https://api.themoviedb.org/3/movie/'\r\n    const API_KEY = '?api_key=88d152960bc5347471fe0bb0965e6bf9'\r\n    const IMAGE_URL = 'https://image.tmdb.org/t/p/'\r\n    const BACKDROP_SIZE = 'original'\r\n    const POSTER_SIZE = 'w342'\r\n    const [movie, setMovie] = useState<any>({})\r\n\r\n    const {id} = useParams<ParamsType>()\r\n\r\n    const getMovie = async () => {\r\n        try {\r\n            const res = await fetch(`${BASE_URL}${id}${API_KEY}`)\r\n            const newMovie = await res.json()\r\n            setMovie(newMovie)\r\n        } catch (e) {\r\n            console.error(e)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMovie()\r\n    }, [id])\r\n\r\n    return (\r\n        <div>\r\n            <img className={'backdrop'} src={`${IMAGE_URL}${BACKDROP_SIZE}${movie.backdrop_path}`}\r\n                 alt={`${movie.title}Backdrop`}/>\r\n            <div className={'detail-details'}>\r\n                <img className={'detail-poster'} src={`${IMAGE_URL}${POSTER_SIZE}${movie.poster_path}`}\r\n                     alt={`${movie.title}Poster`}/>\r\n                <div>\r\n                    <h1>{movie.title}</h1>\r\n                    <p>{movie.overview}</p>\r\n                    <ul>\r\n                        {movie.genres?.map((genre: { name: string }) => {\r\n                            return <li>\r\n                                {genre.name}\r\n                            </li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieDetails;","import React from 'react';\nimport './App.css';\nimport {MoviesList} from \"./MoviesList\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport MovieDetails from \"./MovieDetails\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Switch>\n                    <Route path={'/movie/:id'}>\n                        <MovieDetails/>\n                    </Route>\n                    <Route exact path={'/movies'}>\n                        <MoviesList/>\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App/>\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}